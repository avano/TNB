name: Release snapshot
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: 'Version to create/release (-SNAPSHOT suffix is added automatically). If empty, the default value is NEXT_VERSION-DATE'
        required: false

env:
  # The setup-java action needs the name of the env variable with passwords
  GPG_PASSPHRASE: ${{ secrets.GPG_KEY_PASSWORD }}
  OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}
  OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}
  RELEASE_VERSION: ${{ inputs.release-version }}

jobs:
  deploy-artifacts:
    runs-on: ubuntu-latest
    name: Deploy artifacts
    steps:
      - uses: actions/checkout@v3
        with:
          # Fetch the whole history to have all released tags available
          fetch-depth: 0
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'adopt'
          server-id: ossrh
          server-username: OSSRH_USERNAME
          server-password: OSSRH_PASSWORD
          gpg-private-key: ${{ secrets.GPG_KEY }}
          gpg-passphrase: GPG_PASSPHRASE
      - name: Create snapshot version
        run: |
          if [ -z "${RELEASE_VERSION}" ]; then
            # Get the latest released tag and increase its version (as we always stay on 1.0-SNAPSHOT in main branch for tnb-tests usage, but it would be better to have also the snapshot version incrementing)
            # Only select tags matching 'v*'
            previous_tag="$(git for-each-ref --sort=creatordate --format '%(refname)' "refs/tags/v*" | awk -F"/" 'END{print substr($3,2)}')"
            curl -o semver https://raw.githubusercontent.com/fsaintjacques/semver-tool/master/src/semver && chmod +x semver
            RELEASE_VERSION="$(./semver bump patch ${previous_tag})-$(date +'%Y%m%d-%H%M%S')-SNAPSHOT"
          elif [[ ! "${RELEASE_VERSION}" == *"-SNAPSHOT" ]]; then
            RELEASE_VERSION="${RELEASE_VERSION}"-SNAPSHOT
          fi
          mvn --no-transfer-progress versions:set -DnewVersion=${RELEASE_VERSION} -DoldVersion=* -DgroupId=* -DartifactId=* -DgenerateBackupPoms=false
      - name: Deploy
        run: |
          if [ "${GITHUB_REPOSITORY_OWNER}" = "tnb-software" ]; then
            mvn --no-transfer-progress --activate-profiles deploy clean deploy
          fi
